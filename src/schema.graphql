# import Subscription.product, Post, Product, ProductWhereInput, ProductWhereUniqueInput, ProductOrderByInput from "./generated/prisma.graphql"

scalar Upload

type Query {
  products(
    where: ProductWhereInput
    orderBy: ProductOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Product]!
}

type RefreshTokenPayload {
  token: String!
  userId: String!
}

type Mutation {
  refreshToken: RefreshTokenPayload!
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): LoginResponse!
  createProduct(name: String!, price: Float!, picture: Upload!): Product!
  updateProduct(id: ID!, name: String!, price: Float, picture: Upload!): Product
  deleteProduct(where: ProductWhereUniqueInput!): Product
}

type AuthPayload {
  token: String!
  user: User!
}

type Error {
  field: String!
  msg: String!
}

type LoginResponse {
  payload: AuthPayload
  error: Error
}

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
}
